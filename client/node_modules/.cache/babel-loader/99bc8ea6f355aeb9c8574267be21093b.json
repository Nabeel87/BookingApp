{"ast":null,"code":"var _jsxFileName = \"/home/nabil/Desktop/Boot Camp 2020/BookingApp/client/src/components/reserve/Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./reserve.css\";\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { useContext, useState } from \"react\";\nimport { SearchContext } from \"../../context/SearchContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`/hotels/room/${hotelId}`); //    console.log(\"dataaa ...\",data);\n\n  const {\n    dates\n  } = useContext(SearchContext);\n\n  const getDateInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const date = new Date(start.getTime());\n    let dates = [];\n\n    while (data <= end) {\n      dates.push(new Date(date).getTime());\n      date.setDate(date.getDate() + 1);\n    }\n\n    return dates;\n  };\n\n  console.log(getDateInRange);\n\n  const handleSelect = e => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n    setSelectedRooms(checked ? [...selectedRooms, value] : selectedRooms.filter(item => item !== value));\n  }; // console.log(\"selected room: \", selectedRooms);\n\n\n  const handleClick = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reserve\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rContainer\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCircleXmark,\n        className: \"rClose\",\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select Your Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rItemInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rTitle\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rDecs\",\n            children: item.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rMax\",\n            children: [\"Max People: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: item.maxPeople\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rPrice\",\n            children: item.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), item.roomNumbers.map(roomNumbers => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: roomNumbers.number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: roomNumbers._id,\n            onChange: handleSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"rButton\",\n        children: \"Reserve Now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reserve, \"sgGmFRi2+y9gipjvFpOK0FbzQf8=\", false, function () {\n  return [useFetch];\n});\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["/home/nabil/Desktop/Boot Camp 2020/BookingApp/client/src/components/reserve/Reserve.jsx"],"names":["FontAwesomeIcon","faCircleXmark","useFetch","useContext","useState","SearchContext","Reserve","setOpen","hotelId","selectedRooms","setSelectedRooms","data","loading","error","dates","getDateInRange","startDate","endDate","start","Date","end","date","getTime","push","setDate","getDate","console","log","handleSelect","e","checked","target","value","filter","item","handleClick","map","title","desc","maxPeople","price","roomNumbers","number","_id"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./reserve.css\";\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { useContext, useState } from \"react\";\nimport { SearchContext } from \"../../context/SearchContext\";\n\nconst Reserve = ({ setOpen, hotelId }) => {\n    const [selectedRooms, setSelectedRooms] = useState([]);\n    const { data, loading, error } = useFetch(`/hotels/room/${hotelId}`);\n    //    console.log(\"dataaa ...\",data);\n    const { dates } = useContext(SearchContext);\n\n    const getDateInRange = (startDate, endDate) => {\n        const start = new Date(startDate);\n        const end = new Date(endDate);\n\n        const date = new Date(start.getTime());\n\n        let dates = [];\n\n        while (data <= end) {\n            dates.push(new Date(date).getTime());\n            date.setDate(date.getDate() + 1);\n        }\n        return dates;\n    };\n\n    console.log(getDateInRange);\n\n    const handleSelect = (e) => {\n        const checked = e.target.checked;\n        const value = e.target.value;\n        setSelectedRooms(\n            checked\n                ? [...selectedRooms, value]\n                : selectedRooms.filter((item) => item !== value)\n        );\n    };\n    // console.log(\"selected room: \", selectedRooms);\n\n    const handleClick = () => {\n\n    };\n\n    return (\n        <div className=\"reserve\">\n            <div className=\"rContainer\">\n                <FontAwesomeIcon\n                    icon={faCircleXmark}\n                    className=\"rClose\"\n                    onClick={() => setOpen(false)}\n                />\n                <span>Select Your Rooms</span>\n                {data.map(item => (\n                    <div className=\"rItem\">\n                        <div className=\"rItemInfo\">\n                            <div className=\"rTitle\">{item.title}</div>\n                            <div className=\"rDecs\">{item.desc}</div>\n                            <div className=\"rMax\">\n                                Max People: <b>{item.maxPeople}</b>\n                            </div>\n                            <div className=\"rPrice\">{item.price}</div>\n                        </div>\n\n                        {item.roomNumbers.map((roomNumbers) => (\n                            <div className=\"room\">\n                                <label>{roomNumbers.number}</label>\n                                <input\n                                    type=\"checkbox\"\n                                    value={roomNumbers._id}\n                                    onChange={handleSelect}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                ))}\n                <button onClick={handleClick} className=\"rButton\">Reserve Now!</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Reserve"]},"metadata":{},"sourceType":"module"}