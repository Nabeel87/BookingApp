{"ast":null,"code":"// import { createContext, useEffect, useReducer } from \"react\";\n// const INITIAL_STATE = {\n//   user: JSON.parse(localStorage.getItem(\"user\")) || null,\n//   loading: false,\n//   error: null,\n// };\n// export const AuthContext = createContext(INITIAL_STATE);\n// const AuthReducer = (state, action) => {\n//   switch (action.type) {\n//     case \"LOGIN_START\":\n//       return {\n//         user: null,\n//         loading: true,\n//         error: null,\n//       };\n//     case \"LOGIN_SUCCESS\":\n//       return {\n//         user: action.payload,\n//         loading: false,\n//         error: null,\n//       };\n//     case \"LOGIN_FAILURE\":\n//       return {\n//         user: null,\n//         loading: false,\n//         error: action.payload,\n//       };\n//     case \"LOGOUT\":\n//       return {\n//         user: null,\n//         loading: false,\n//         error: null,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n// export const AuthContextProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\n//   useEffect(() => {\n//     localStorage.setItem(\"user\", JSON.stringify(state.user));\n//   }, [state.user]);\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         user: state.user,\n//         loading: state.loading,\n//         error: state.error,\n//         dispatch,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };","map":{"version":3,"sources":["/home/nabil/Desktop/Boot Camp 2020/BookingApp/client/src/context/AuthContext.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import { createContext, useEffect, useReducer } from \"react\";\n\n// const INITIAL_STATE = {\n//   user: JSON.parse(localStorage.getItem(\"user\")) || null,\n//   loading: false,\n//   error: null,\n// };\n\n// export const AuthContext = createContext(INITIAL_STATE);\n\n// const AuthReducer = (state, action) => {\n//   switch (action.type) {\n//     case \"LOGIN_START\":\n//       return {\n//         user: null,\n//         loading: true,\n//         error: null,\n//       };\n//     case \"LOGIN_SUCCESS\":\n//       return {\n//         user: action.payload,\n//         loading: false,\n//         error: null,\n//       };\n//     case \"LOGIN_FAILURE\":\n//       return {\n//         user: null,\n//         loading: false,\n//         error: action.payload,\n//       };\n//     case \"LOGOUT\":\n//       return {\n//         user: null,\n//         loading: false,\n//         error: null,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n// export const AuthContextProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\n\n//   useEffect(() => {\n//     localStorage.setItem(\"user\", JSON.stringify(state.user));\n//   }, [state.user]);\n\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         user: state.user,\n//         loading: state.loading,\n//         error: state.error,\n//         dispatch,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };"]},"metadata":{},"sourceType":"module"}