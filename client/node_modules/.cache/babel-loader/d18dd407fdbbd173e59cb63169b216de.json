{"ast":null,"code":"var _jsxFileName = \"/home/nabil/Desktop/Boot Camp 2020/BookingApp/client/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userfromlocalstorage = localStorage.getItem(\"user\");\nconsole.log(\"user from local \", userfromlocalstorage);\nconst INITIAL_STATE = {\n  user: null,\n  loading: false,\n  error: null\n};\nexport const AuthContext = /*#__PURE__*/createContext(INITIAL_STATE);\n_c = AuthContext;\n\nconst AuthReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        loading: true,\n        error: null\n      };\n\n    case \"LOGIN_SUCCESS\":\n      return {\n        user: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case \"LOGIN_FAILURE\":\n      return {\n        user: null,\n        loading: false,\n        error: action.payload\n      };\n\n    case \"LOGOUT\":\n      return {\n        user: null,\n        loading: false,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c2 = AuthReducer;\nexport const AuthContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\n  useEffect(() => {\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\n  }, [state.user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      loading: state.loading,\n      error: state.error,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"zpn/kx5Q6O+5t2dWmjRtda+kHzA=\");\n\n_c3 = AuthContextProvider;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AuthContext\");\n$RefreshReg$(_c2, \"AuthReducer\");\n$RefreshReg$(_c3, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/nabil/Desktop/Boot Camp 2020/BookingApp/client/src/context/AuthContext.js"],"names":["createContext","useEffect","useReducer","userfromlocalstorage","localStorage","getItem","console","log","INITIAL_STATE","user","loading","error","AuthContext","AuthReducer","state","action","type","payload","AuthContextProvider","children","dispatch","setItem","JSON","stringify"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,OAArD;;AACA,MAAMC,oBAAoB,GAACC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA3B;AACAC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BJ,oBAA/B;AACA,MAAMK,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAG,IADa;AAEpBC,EAAAA,OAAO,EAAE,KAFW;AAGpBC,EAAAA,KAAK,EAAE;AAHa,CAAtB;AAMA,OAAO,MAAMC,WAAW,gBAAGZ,aAAa,CAACQ,aAAD,CAAjC;KAAMI,W;;AAEb,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO;AACLP,QAAAA,IAAI,EAAE,IADD;AAELC,QAAAA,OAAO,EAAE,IAFJ;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,eAAL;AACE,aAAO;AACLF,QAAAA,IAAI,EAAEM,MAAM,CAACE,OADR;AAELP,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,eAAL;AACE,aAAO;AACLF,QAAAA,IAAI,EAAE,IADD;AAELC,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAHT,OAAP;;AAKF,SAAK,QAAL;AACE,aAAO;AACLR,QAAAA,IAAI,EAAE,IADD;AAELC,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF;AACE,aAAOG,KAAP;AA1BJ;AA4BD,CA7BD;;MAAMD,W;AA+BN,OAAO,MAAMK,mBAAmB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACnD,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBlB,UAAU,CAACW,WAAD,EAAcL,aAAd,CAApC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,YAAY,CAACiB,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeT,KAAK,CAACL,IAArB,CAA7B;AACD,GAFQ,EAEN,CAACK,KAAK,CAACL,IAAP,CAFM,CAAT;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLA,MAAAA,IAAI,EAAEK,KAAK,CAACL,IADP;AAELC,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAFV;AAGLC,MAAAA,KAAK,EAAEG,KAAK,CAACH,KAHR;AAILS,MAAAA;AAJK,KADT;AAAA,cAQGD;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnBM;;GAAMD,mB;;MAAAA,mB","sourcesContent":["import { createContext, useEffect, useReducer } from \"react\";\nconst userfromlocalstorage=localStorage.getItem(\"user\")\nconsole.log(\"user from local \",userfromlocalstorage)\nconst INITIAL_STATE = {\n  user:  null,\n  loading: false,\n  error: null,\n};\n\nexport const AuthContext = createContext(INITIAL_STATE);\n\nconst AuthReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        loading: true,\n        error: null,\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        user: action.payload,\n        loading: false,\n        error: null,\n      };\n    case \"LOGIN_FAILURE\":\n      return {\n        user: null,\n        loading: false,\n        error: action.payload,\n      };\n    case \"LOGOUT\":\n      return {\n        user: null,\n        loading: false,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const AuthContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\n\n  useEffect(() => {\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\n  }, [state.user]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        loading: state.loading,\n        error: state.error,\n        dispatch,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};"]},"metadata":{},"sourceType":"module"}